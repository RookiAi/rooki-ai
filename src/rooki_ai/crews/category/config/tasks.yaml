get_tweet_context:
  description: >
    Build a TweetContext@v1 from provided context data.
    - COPY: user_id, user_message, voice_profile, trending_topics, mcp_examples, brand_constraints.
    - GENERATE: insights_summary (2â€“4 sentences summarizing patterns relevant to user_message).
    Return ONLY valid TweetContext@v1 JSON.
  temperature: 0.3
  top_p: 0.9
  expected_output: "TweetContext@v1"
  agent: "tweet_context_agent"

draft_demo_tweet:
  description: >
    Using a TweetContext@v1 from context, produce a TweetDraft@v1 with:
    - prelude: one conversational sentence directly responding to user_message.
    - tweet: a personalized tweet. Use voice_profile if present; otherwise infer from insights_summary.
    Respect brand_constraints (hashtags/mentions/alerts). Use trending_topics only for relevance.
    Return ONLY valid TweetDraft@v1 JSON.
  temperature: 0.8
  top_p: 0.95
  expected_output: "TweetDraft@v1"
  agent: "tweet_draft_agent"
  requires: ["get_tweet_context"]

refine_demo_tweet:
  description: >
    Refine an existing TweetDraft@v1 using TweetContext@v1 and user_feedback (from context).
    Align with voice_profile if present; otherwise use insights_summary.
    Respect brand_constraints; keep under constraints.max_chars (default 280).
    Return ONLY valid TweetDraft@v1 JSON.
  temperature: 0.6
  top_p: 0.9
  expected_output: "TweetDraft@v1"
  agent: "tweet_refine_agent"
  requires: ["get_tweet_context", "draft_demo_tweet"]
